#!/usr/bin/env node

const csv = require('csv-parser')
const fs = require('fs')
const d3 = require('d3')
const jsdom = require('jsdom')

const MARGIN = { TOP: 60, RIGHT: 60, BOTTOM: 60, LEFT: 60 }
const HEIGHT = 5000 - MARGIN.TOP - MARGIN.BOTTOM
const WIDTH  = 3000 - MARGIN.LEFT - MARGIN.RIGHT

const MIN_YEAR = new Date(1967, 0, 1)
const MAX_YEAR = new Date(2010, 0, 1)

const STATES = {
    AL: 'Alabama',
    AK: 'Alaska',
    AZ: 'Arizona',
    AR: 'Arkansas',
    CA: 'California',
    CO: 'Colorado',
    CT: 'Connecticut',
    DE: 'Delaware',
    DC: 'District of Columbia',
    FL: 'Florida',
    GA: 'Georgia',
    HI: 'Hawaii',
    ID: 'Idaho',
    IL: 'Illinois',
    IN: 'Indiana',
    IA: 'Iowa',
    KS: 'Kansas',
    KY: 'Kentucky',
    LA: 'Louisiana',
    ME: 'Maine',
    MD: 'Maryland',
    MA: 'Massachusetts',
    MI: 'Michigan',
    MN: 'Minnesota',
    MS: 'Mississippi',
    MO: 'Missouri',
    MT: 'Montana',
    NE: 'Nebraska',
    NV: 'Nevada',
    NH: 'New Hampshire',
    NJ: 'New Jersey',
    NM: 'New Mexico',
    NY: 'New York',
    NC: 'North Carolina',
    ND: 'North Dakota',
    OH: 'Ohio',
    OK: 'Oklahoma',
    OR: 'Oregon',
    PA: 'Pennsylvania',
    RI: 'Rhode Island',
    SC: 'South Carolina',
    SD: 'South Dakota',
    TN: 'Tennessee',
    TX: 'Texas',
    UT: 'Utah',
    VT: 'Vermont',
    VA: 'Virginia',
    WA: 'Washington',
    WV: 'West Virginia',
    WI: 'Wisconsin',
    WY: 'Wyoming'
}

const STATE_ABBRS = Object.keys(STATES).reverse()

const document = jsdom.jsdom()

const options = {
    separator: '\t',
    escape: '\\',
    strict: true
}

const y = d3.scaleBand()
  .domain(STATE_ABBRS)
  .padding(0.1)
  .rangeRound([HEIGHT, 0])

const x = d3.scaleTime()
  .domain([MIN_YEAR, MAX_YEAR])
  .range([0, WIDTH])

const yax = d3.axisLeft()
  .scale(y)

const xax = d3.axisTop()
  .ticks(d3.timeYear.every(1))
  .scale(x)

const svg = d3.select(document.body).append('svg')
    .attr('width', WIDTH + MARGIN.LEFT + MARGIN.RIGHT)
    .attr('height', HEIGHT + MARGIN.TOP + MARGIN.BOTTOM)
  .append('g')
    .attr('transform', 'translate(' + MARGIN.LEFT + ',' + MARGIN.TOP + ')')

svg.append('g').call(yax)
svg.append('g').call(xax)

const stateGroup = svg.selectAll('.state')
  .data(STATE_ABBRS)
.enter().append('g')
  .attr('transform', (d) => 'translate(0,' + y(d) + ')')


fs.writeFileSync('out.svg', d3.select(document.body).node().innerHTML)

// fs.createReadStream('data/raw/results.txt')
//   .pipe(csv(options))
//   .on('data', function (row) {
//     console.log(data)
//     shitfuck
//   })
